/**
 * Telegram Mini Apps Utilities
 * –í—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ –æ—Ñ—ñ—Ü—ñ–π–Ω–æ—ó –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—ó: https://core.telegram.org/bots/webapps
 */

class TelegramUtils {
    constructor() {
        this.tg = window.Telegram.WebApp;
        this.init();
    }

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Telegram Web App
     */
    init() {
        if (!this.tg) {
            console.error('Telegram Web App –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
            return;
        }

        // –û—Å–Ω–æ–≤–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
        this.tg.ready();
        this.tg.expand();

        // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫
        this.setupButtons();

        // –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π
        this.setupEventHandlers();
    }

    /**
     * –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—ó
     */
    setupButtons() {
        // Main Button (–æ—Å–Ω–æ–≤–Ω–∞ –∫–Ω–æ–ø–∫–∞)
        if (this.tg.MainButton) {
            this.tg.MainButton.setText('üìö –í—ñ–¥–∫—Ä–∏—Ç–∏ FAQ');
            this.tg.MainButton.show();
        }

        // Secondary Button (–¥—Ä—É–≥–æ—Ä—è–¥–Ω–∞ –∫–Ω–æ–ø–∫–∞, Bot API 7.10+)
        if (this.tg.SecondaryButton) {
            this.tg.SecondaryButton.setText('üí¨ –ü—ñ–¥—Ç—Ä–∏–º–∫–∞');
            this.tg.SecondaryButton.show();
        }

        // Settings Button (–∫–Ω–æ–ø–∫–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å, Bot API 7.0+)
        if (this.tg.SettingsButton) {
            this.tg.SettingsButton.show();
        }
    }

    /**
     * –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π
     */
    setupEventHandlers() {
        // –û—Å–Ω–æ–≤–Ω–∞ –∫–Ω–æ–ø–∫–∞
        this.tg.onEvent('mainButtonClicked', () => {
            this.showInfo('FAQ SkillKlan', '–¶–µ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –∑ —á–∞—Å—Ç–æ –∑–∞–ø–∏—Ç—É–≤–∞–Ω–∏–º–∏ –ø–∏—Ç–∞–Ω–Ω—è–º–∏ –ø—Ä–æ SkillKlan. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –ø–æ—à—É–∫ –∞–±–æ —Ä–æ–∑–≥–æ—Ä—Ç–∞–π—Ç–µ —Å–µ–∫—Ü—ñ—ó –¥–ª—è –∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è –ø–æ—Ç—Ä—ñ–±–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó.');
        });

        // –î—Ä—É–≥–æ—Ä—è–¥–Ω–∞ –∫–Ω–æ–ø–∫–∞
        if (this.tg.SecondaryButton) {
            this.tg.onEvent('secondaryButtonClicked', () => {
                this.contactSupport();
            });
        }

        // –ö–Ω–æ–ø–∫–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
        if (this.tg.SettingsButton) {
            this.tg.onEvent('settingsButtonClicked', () => {
                this.showSettings();
            });
        }

        // –ó–º—ñ–Ω–∞ —Ç–µ–º–∏
        this.tg.onEvent('themeChanged', () => {
            this.updateTheme();
        });

        // –ó–º—ñ–Ω–∞ —Ä–æ–∑–º—ñ—Ä—É –≤—ñ–∫–Ω–∞
        this.tg.onEvent('viewportChanged', () => {
            this.updateViewport();
        });

        // –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–∞–∫—Ä–∏—Ç—Ç—è
        this.tg.onEvent('closingConfirmationEnabled', () => {
            this.showClosingConfirmation();
        });
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
     * @param {string} title - –ó–∞–≥–æ–ª–æ–≤–æ–∫
     * @param {string} message - –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
     */
    showInfo(title, message) {
        this.tg.showAlert(message);
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ –¥—ñ–∞–ª–æ–≥ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
     * @param {string} title - –ó–∞–≥–æ–ª–æ–≤–æ–∫
     * @param {string} message - –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
     * @param {Function} callback - –§—É–Ω–∫—Ü—ñ—è –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –≤–∏–∫–ª–∏–∫—É
     */
    showConfirm(title, message, callback) {
        this.tg.showConfirm(message, callback);
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ –¥—ñ–∞–ª–æ–≥ –∑ –ø–æ–ª–µ–º –≤–≤–æ–¥—É
     * @param {string} title - –ó–∞–≥–æ–ª–æ–≤–æ–∫
     * @param {string} message - –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
     * @param {string} placeholder - –ü–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä
     * @param {Function} callback - –§—É–Ω–∫—Ü—ñ—è –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –≤–∏–∫–ª–∏–∫—É
     */
    showPrompt(title, message, placeholder, callback) {
        this.tg.showPopup({
            title: title,
            message: message,
            buttons: [
                {
                    id: 'ok',
                    type: 'ok',
                    text: 'OK'
                },
                {
                    id: 'cancel',
                    type: 'cancel',
                    text: '–°–∫–∞—Å—É–≤–∞—Ç–∏'
                }
            ]
        }, callback);
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ popup –∑ –∫–Ω–æ–ø–∫–∞–º–∏
     * @param {Object} options - –û–ø—Ü—ñ—ó popup
     * @param {Function} callback - –§—É–Ω–∫—Ü—ñ—è –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –≤–∏–∫–ª–∏–∫—É
     */
    showPopup(options, callback) {
        this.tg.showPopup(options, callback);
    }

    /**
     * –ó–≤'—è–∑–∞—Ç–∏—Å—è –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é
     */
    contactSupport() {
        this.showConfirm(
            '–ó–≤\'—è–∑–∞—Ç–∏—Å—è –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é?',
            '–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å "–¢–∞–∫" —â–æ–± –ø–µ—Ä–µ–π—Ç–∏ –¥–æ —á–∞—Ç—É –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é –∞–±–æ "–ù—ñ" —â–æ–± –∑–∞–ª–∏—à–∏—Ç–∏—Å—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ FAQ.',
            (confirmed) => {
                if (confirmed) {
                    // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –¥–∞–Ω—ñ –≤ –±–æ—Ç
                    this.tg.sendData('contact_support');
                    // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ —É—Å–ø—ñ—Ö
                    this.showInfo('–ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ —á–∞—Ç—É –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é...');
                    // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ Web App
                    setTimeout(() => {
                        this.tg.close();
                    }, 1500);
                }
            }
        );
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
     */
    showSettings() {
        this.showInfo('–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è', '–¢—É—Ç –º–æ–∂–Ω–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –¥–æ–¥–∞—Ç–∫—É. –§—É–Ω–∫—Ü—ñ—è –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ.');
    }

    /**
     * –û–Ω–æ–≤–∏—Ç–∏ —Ç–µ–º—É
     */
    updateTheme() {
        const themeParams = this.tg.themeParams;
        
        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ CSS –∑–º—ñ–Ω–Ω—ñ –¥–ª—è —Ç–µ–º–∏
        document.documentElement.style.setProperty('--tg-theme-bg-color', themeParams.bg_color || '#ffffff');
        document.documentElement.style.setProperty('--tg-theme-text-color', themeParams.text_color || '#000000');
        document.documentElement.style.setProperty('--tg-theme-hint-color', themeParams.hint_color || '#999999');
        document.documentElement.style.setProperty('--tg-theme-button-color', themeParams.button_color || '#2481cc');
        document.documentElement.style.setProperty('--tg-theme-button-text-color', themeParams.button_text_color || '#ffffff');
        document.documentElement.style.setProperty('--tg-theme-link-color', themeParams.link_color || '#2481cc');
        document.documentElement.style.setProperty('--tg-theme-secondary-bg-color', themeParams.secondary_bg_color || '#f0f0f0');
    }

    /**
     * –û–Ω–æ–≤–∏—Ç–∏ viewport
     */
    updateViewport() {
        const viewportHeight = this.tg.viewportHeight;
        
        // –ê–¥–∞–ø—Ç—É—î–º–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–∏ –∑–º—ñ–Ω—ñ —Ä–æ–∑–º—ñ—Ä—É
        if (viewportHeight < 500) {
            document.body.style.fontSize = '14px';
        } else {
            document.body.style.fontSize = '16px';
        }
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç–∏ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–∞–∫—Ä–∏—Ç—Ç—è
     */
    showClosingConfirmation() {
        this.showConfirm(
            '–ó–∞–∫—Ä–∏—Ç–∏ FAQ?',
            '–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –∑–∞–∫—Ä–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É?',
            (confirmed) => {
                if (confirmed) {
                    this.tg.close();
                }
            }
        );
    }

    /**
     * –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –∫–æ–ª—ñ—Ä –∑–∞–≥–æ–ª–æ–≤–∫–∞
     * @param {string} color - –ö–æ–ª—ñ—Ä —É —Ñ–æ—Ä–º–∞—Ç—ñ hex
     */
    setHeaderColor(color) {
        if (this.tg.setHeaderColor) {
            this.tg.setHeaderColor(color);
        }
    }

    /**
     * –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ –∫–æ–ª—ñ—Ä –Ω–∏–∂–Ω—å–æ—ó –ø–∞–Ω–µ–ª—ñ
     * @param {string} color - –ö–æ–ª—ñ—Ä —É —Ñ–æ—Ä–º–∞—Ç—ñ hex
     */
    setBottomBarColor(color) {
        if (this.tg.setBottomBarColor) {
            this.tg.setBottomBarColor(color);
        }
    }

    /**
     * –í–∫–ª—é—á–∏—Ç–∏/–≤–∏–∫–ª—é—á–∏—Ç–∏ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ñ —Å–≤–∞–π–ø–∏
     * @param {boolean} enabled - –ß–∏ –≤–∫–ª—é—á–µ–Ω—ñ —Å–≤–∞–π–ø–∏
     */
    setVerticalSwipes(enabled) {
        if (enabled) {
            this.tg.enableVerticalSwipes();
        } else {
            this.tg.disableVerticalSwipes();
        }
    }

    /**
     * –í–∫–ª—é—á–∏—Ç–∏/–≤–∏–∫–ª—é—á–∏—Ç–∏ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–∞–∫—Ä–∏—Ç—Ç—è
     * @param {boolean} enabled - –ß–∏ –≤–∫–ª—é—á–µ–Ω–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
     */
    setClosingConfirmation(enabled) {
        if (enabled) {
            this.tg.enableClosingConfirmation();
        } else {
            this.tg.disableClosingConfirmation();
        }
    }

    /**
     * –û—Ç—Ä–∏–º–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     * @returns {Object} –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
     */
    getUserInfo() {
        return {
            id: this.tg.initDataUnsafe?.user?.id,
            firstName: this.tg.initDataUnsafe?.user?.first_name,
            lastName: this.tg.initDataUnsafe?.user?.last_name,
            username: this.tg.initDataUnsafe?.user?.username,
            languageCode: this.tg.initDataUnsafe?.user?.language_code,
            isPremium: this.tg.initDataUnsafe?.user?.is_premium,
            photoUrl: this.tg.initDataUnsafe?.user?.photo_url
        };
    }

    /**
     * –û—Ç—Ä–∏–º–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ Web App
     * @returns {Object} –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ Web App
     */
    getWebAppInfo() {
        return {
            platform: this.tg.platform,
            version: this.tg.version,
            colorScheme: this.tg.colorScheme,
            themeParams: this.tg.themeParams,
            isExpanded: this.tg.isExpanded,
            viewportHeight: this.tg.viewportHeight,
            viewportStableHeight: this.tg.viewportStableHeight,
            headerColor: this.tg.headerColor,
            backgroundColor: this.tg.backgroundColor
        };
    }

    /**
     * –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –¥–∞–Ω—ñ –≤ –±–æ—Ç
     * @param {string} data - –î–∞–Ω—ñ –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏
     */
    sendData(data) {
        this.tg.sendData(data);
    }

    /**
     * –ó–∞–∫—Ä–∏—Ç–∏ Web App
     */
    close() {
        this.tg.close();
    }

    /**
     * –í—ñ–¥–∫—Ä–∏—Ç–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è
     * @param {string} url - URL –¥–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è
     * @param {Object} options - –û–ø—Ü—ñ—ó (Bot API 6.4+)
     */
    openLink(url, options = {}) {
        this.tg.openLink(url, options);
    }

    /**
     * –í—ñ–¥–∫—Ä–∏—Ç–∏ Telegram –ø–æ—Å–∏–ª–∞–Ω–Ω—è
     * @param {string} url - Telegram URL
     */
    openTelegramLink(url) {
        this.tg.openTelegramLink(url);
    }

    /**
     * –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç–∏—Å—è –Ω–∞ inline –∑–∞–ø–∏—Ç
     * @param {string} query - –ó–∞–ø–∏—Ç
     * @param {Array} chatTypes - –¢–∏–ø–∏ —á–∞—Ç—ñ–≤
     */
    switchInlineQuery(query, chatTypes = []) {
        this.tg.switchInlineQuery(query, chatTypes);
    }
}

// –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
if (typeof module !== 'undefined' && module.exports) {
    module.exports = TelegramUtils;
} else {
    window.TelegramUtils = TelegramUtils;
}
