import { getFAQWebAppButton, getFAQFallbackURL } from '../../config/webapp.js';
import { logger } from '../../utils/logger.js';

/**
 * –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è FAQ Web App
 * @param {Object} ctx - –∫–æ–Ω—Ç–µ–∫—Å—Ç Telegraf
 */
export async function handleFAQWebApp(ctx) {
  try {
    // –í–∏–∑–Ω–∞—á–∞—î–º–æ —Å—Ç–∞–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –∞–Ω–∞–ª—ñ—Ç–∏–∫–∏
    const hasContact = ctx.session?.name && ctx.session?.phone;
    const state = hasContact ? 'contact_given' : 'contact_not_given';
    
    // –ê–Ω–∞–ª—ñ—Ç–∏–∫–∞: FAQ_Click {state}
    logger.info('FAQ_Click', { 
      user_id: ctx.from.id,
      username: ctx.from.username,
      state: state,
      has_name: !!ctx.session?.name,
      has_phone: !!ctx.session?.phone
    });
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø—ñ–¥—Ç—Ä–∏–º—É—î –∫–ª—ñ—î–Ω—Ç Web App
    if (ctx.from && ctx.from.is_premium !== undefined) {
      // –°—É—á–∞—Å–Ω–∏–π –∫–ª—ñ—î–Ω—Ç - –≤—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ Web App –ø—Ä—è–º–æ –≤ Telegram
      await ctx.reply('üìö <b>–ß–∞—Å—Ç–æ –∑–∞–ø–∏—Ç—É—é—Ç—å</b>\n\n–í—ñ–¥–∫—Ä–∏–≤–∞—é FAQ —É –∑—Ä—É—á–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ...', {
        parse_mode: 'HTML'
      });
      
      // –ê–Ω–∞–ª—ñ—Ç–∏–∫–∞: FAQ_WebApp_Opened
      logger.info('FAQ_WebApp_Opened', { 
        user_id: ctx.from.id,
        username: ctx.from.username,
        state: state,
        is_premium: ctx.from.is_premium
      });
      
      // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ Web App –∫–Ω–æ–ø–∫—É, —è–∫–∞ –≤—ñ–¥–∫—Ä–∏—î—Ç—å—Å—è –ø—Ä—è–º–æ –≤ Telegram
      await ctx.reply('–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –≤—ñ–¥–∫—Ä–∏—Ç–∏ FAQ:', {
        reply_markup: {
          inline_keyboard: [[getFAQWebAppButton()]]
        }
      });
      
    } else {
      // –°—Ç–∞—Ä–∏–π –∫–ª—ñ—î–Ω—Ç - fallback –Ω–∞ –≤–µ–±-–≤–µ—Ä—Å—ñ—é
      const fallbackUrl = getFAQFallbackURL();
      
      await ctx.reply(
        `üìö <b>–ß–∞—Å—Ç–æ –∑–∞–ø–∏—Ç—É—é—Ç—å</b>\n\n` +
        `–í–∞—à –∫–ª—ñ—î–Ω—Ç –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î –≤–±—É–¥–æ–≤–∞–Ω–∏–π FAQ.\n\n` +
        `üåê –í—ñ–¥–∫—Ä–∏–π—Ç–µ FAQ —É –±—Ä–∞—É–∑–µ—Ä—ñ:\n` +
        `<a href="${fallbackUrl}">${fallbackUrl}</a>`, {
        parse_mode: 'HTML',
        disable_web_page_preview: true
      });
      
      // –ê–Ω–∞–ª—ñ—Ç–∏–∫–∞: FAQ_Fallback_Used
      logger.info('FAQ_Fallback_Used', { 
        user_id: ctx.from.id,
        username: ctx.from.username,
        state: state,
        fallback_url: fallbackUrl
      });
    }
    
  } catch (error) {
    logger.error('Error opening FAQ Web App', { 
      user_id: ctx.from?.id,
      error: error.message 
    });
    
    // Fallback –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ
    const fallbackUrl = getFAQFallbackURL();
    await ctx.reply(
      `‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è FAQ\n\n` +
      `üåê –í—ñ–¥–∫—Ä–∏–π—Ç–µ FAQ —É –±—Ä–∞—É–∑–µ—Ä—ñ:\n` +
      `<a href="${fallbackUrl}">${fallbackUrl}</a>`, {
      parse_mode: 'HTML',
      disable_web_page_preview: true
    });
  }
}

/**
 * –û–±—Ä–æ–±–∫–∞ –ø–æ–¥—ñ–π –∑ Web App
 * @param {Object} ctx - –∫–æ–Ω—Ç–µ–∫—Å—Ç Telegraf
 */
export async function handleWebAppData(ctx) {
  try {
    const webAppData = ctx.message?.web_app_data;
    
    if (webAppData) {
      // –ê–Ω–∞–ª—ñ—Ç–∏–∫–∞: WebApp_Data_Received
      logger.info('WebApp_Data_Received', { 
        user_id: ctx.from.id,
        data: webAppData.data,
        button_text: webAppData.button_text
      });
      
      // –¢—É—Ç –º–æ–∂–Ω–∞ –æ–±—Ä–æ–±–∏—Ç–∏ –¥–∞–Ω—ñ –∑ Web App
      // –ù–∞–ø—Ä–∏–∫–ª–∞–¥, –∑–±–µ—Ä–µ–≥—Ç–∏ –≤–∏–±—Ä–∞–Ω—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –∞–±–æ –ø–∏—Ç–∞–Ω–Ω—è
      
      await ctx.reply('‚úÖ –î–∞–Ω—ñ –∑ FAQ –∑–±–µ—Ä–µ–∂–µ–Ω–æ!', {
        reply_markup: {
          keyboard: [
            ['–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è'],
            ['–ë—ñ–∑–Ω–µ—Å –∞–Ω–∞–ª—ñ—Ç–∏–∫–∞'],
            ['Backend'],
            ['üìö FAQ']
          ],
          resize_keyboard: true
        }
      });
    }
    
  } catch (error) {
    logger.error('Error handling Web App data', { 
      user_id: ctx.from?.id,
      error: error.message 
    });
  }
}
