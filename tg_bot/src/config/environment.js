/**
 * üîß –¶–µ–Ω—Ç—Ä–∞–ª—ñ–∑–æ–≤–∞–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
 * DRY –ø—Ä–∏–Ω—Ü–∏–ø: –û–¥–Ω–µ –º—ñ—Å—Ü–µ –¥–ª—è –≤—Å—ñ—Ö –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
 */

import dotenv from 'dotenv';

// –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
dotenv.config();

/**
 * üîê –ë–µ–∑–ø–µ—á–Ω–µ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è —Ç–æ–∫–µ–Ω–∞
 */
class TokenManager {
  static #instance = null;
  #token = null;
  #isValidated = false;

  constructor() {
    if (TokenManager.#instance) {
      return TokenManager.#instance;
    }
    TokenManager.#instance = this;
  }

  /**
   * –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞ –∑ –≤–∞–ª—ñ–¥–∞—Ü—ñ—î—é (Singleton)
   */
  getToken() {
    if (this.#isValidated && this.#token) {
      return this.#token;
    }

    this.#token = this.#loadAndValidateToken();
    this.#isValidated = true;
    return this.#token;
  }

  /**
   * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è —Ç–æ–∫–µ–Ω–∞
   */
  #loadAndValidateToken() {
    const token = process.env.BOT_TOKEN;
    
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ
    if (!token) {
      this.#throwTokenError(
        'BOT_TOKEN –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!',
        [
          'üí° –†—ñ—à–µ–Ω–Ω—è:',
          '1. –°—Ç–≤–æ—Ä–∏ .env —Ñ–∞–π–ª: cp .env.example .env',
          '2. –î–æ–¥–∞–π —Ç–æ–∫–µ–Ω –≤—ñ–¥ @BotFather',
          '3. –ê–±–æ –≤—Å—Ç–∞–Ω–æ–≤–∏ –∑–º—ñ–Ω–Ω—É —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞: export BOT_TOKEN=your_token'
        ]
      );
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç—É
    const tokenPattern = /^\d{8,10}:[A-Za-z0-9_-]{35}$/;
    if (!tokenPattern.test(token)) {
      this.#throwTokenError(
        '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç —Ç–æ–∫–µ–Ω–∞!',
        [
          'üí° –ü—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç: 1234567890:ABCdefGHIjklMNOpqrsTUVwxyz',
          'üìñ –û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–æ–∫–µ–Ω: https://t.me/BotFather'
        ]
      );
    }

    return token;
  }

  /**
   * –í–∏–≤–µ–¥–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏ –∑ –¥–µ—Ç–∞–ª—è–º–∏
   */
  #throwTokenError(message, solutions = []) {
    console.error(`\n‚ùå ${message}`);
    solutions.forEach(solution => console.error(`   ${solution}`));
    console.error('\nüìã –î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è: README.md\n');
    process.exit(1);
  }

  /**
   * –ú–∞—Å–∫—É–≤–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –ª–æ–≥—ñ–≤
   */
  getMaskedToken() {
    if (!this.#token) return 'NOT_SET';
    const parts = this.#token.split(':');
    return `${parts[0]}:${'*'.repeat(20)}...${parts[1]?.slice(-4) || ''}`;
  }
}

/**
 * üåç –ú–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
 */
class EnvironmentConfig {
  static #instance = null;
  #config = null;

  constructor() {
    if (EnvironmentConfig.#instance) {
      return EnvironmentConfig.#instance;
    }
    EnvironmentConfig.#instance = this;
    this.#initConfig();
  }

  #initConfig() {
    const tokenManager = new TokenManager();
    
    this.#config = {
      // üîë –¢–æ–∫–µ–Ω (–∑ –≤–∞–ª—ñ–¥–∞—Ü—ñ—î—é)
      bot: {
        token: tokenManager.getToken(),
        maskedToken: tokenManager.getMaskedToken()
      },

      // üåç –°–µ—Ä–µ–¥–æ–≤–∏—â–µ
      env: {
        nodeEnv: process.env.NODE_ENV || 'development',
        isDevelopment: process.env.NODE_ENV !== 'production',
        isProduction: process.env.NODE_ENV === 'production'
      },

      // üìù –õ–æ–≥—É–≤–∞–Ω–Ω—è
      logging: {
        level: process.env.LOG_LEVEL || 'info',
        enableDebug: process.env.DEBUG === 'true'
      },

      // üîó Webhook (–ø—Ä–æ–¥–∞–∫—à–Ω)
      webhook: {
        url: process.env.WEBHOOK_URL,
        port: this.#parsePort(process.env.WEBHOOK_PORT || process.env.PORT),
        enabled: !!process.env.WEBHOOK_URL
      },

      // ‚öôÔ∏è –î–æ–¥–∞—Ç–∫–æ–≤—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
      app: {
        sessionTimeout: parseInt(process.env.SESSION_TIMEOUT) || 3600000, // 1 –≥–æ–¥–∏–Ω–∞
        maxRetries: parseInt(process.env.MAX_RETRIES) || 3
      }
    };
  }

  #parsePort(port) {
    const parsed = parseInt(port);
    return isNaN(parsed) ? 3000 : parsed;
  }

  /**
   * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
   */
  get() {
    return this.#config;
  }

  /**
   * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏—Ö —Å–µ–∫—Ü—ñ–π
   */
  getBot() { return this.#config.bot; }
  getEnv() { return this.#config.env; }
  getLogging() { return this.#config.logging; }
  getWebhook() { return this.#config.webhook; }
  getApp() { return this.#config.app; }
}

/**
 * üìä –õ–æ–≥—É–≤–∞–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó (–±–µ–∑–ø–µ—á–Ω–æ)
 */
export function logEnvironmentInfo() {
  const config = new EnvironmentConfig().get();
  
  console.log('\nüîß –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞:');
  console.log(`   –°–µ—Ä–µ–¥–æ–≤–∏—â–µ: ${config.env.nodeEnv}`);
  console.log(`   –õ–æ–≥—É–≤–∞–Ω–Ω—è: ${config.logging.level}`);
  console.log(`   –¢–æ–∫–µ–Ω: ${config.bot.maskedToken}`);
  
  if (config.webhook.enabled) {
    console.log(`   Webhook: ${config.webhook.url}:${config.webhook.port}`);
  } else {
    console.log('   –†–µ–∂–∏–º: Polling (—Ä–æ–∑—Ä–æ–±–∫–∞)');
  }
  
  if (config.env.isDevelopment) {
    console.log('   Debug: –£–≤—ñ–º–∫–Ω–µ–Ω–æ –¥–æ–¥–∞—Ç–∫–æ–≤–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è');
  }
  console.log('');
}

/**
 * üéØ –û—Å–Ω–æ–≤–Ω–∏–π –µ–∫—Å–ø–æ—Ä—Ç - Singleton –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
 */
const environmentConfig = new EnvironmentConfig();
export const config = environmentConfig.get();

// –ï–∫—Å–ø–æ—Ä—Ç –æ–∫—Ä–µ–º–∏—Ö –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤ –¥–ª—è —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω–∏—Ö –ø–æ—Ç—Ä–µ–±
export { TokenManager, EnvironmentConfig };

// –®–≤–∏–¥–∫–∏–π –¥–æ—Å—Ç—É–ø –¥–æ –Ω–∞–π—á–∞—Å—Ç—ñ—à–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å
export const {
  bot: { token: BOT_TOKEN },
  env: { isDevelopment, isProduction },
  logging: { level: LOG_LEVEL }
} = config;
