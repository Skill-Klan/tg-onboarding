/**
 * ü§ñ –¢–µ—Å—Ç–æ–≤–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –±–æ—Ç–∞ –∑ Web App
 */

import { Telegraf } from 'telegraf';
import { BOT_TOKEN } from './src/config/environment.js';

console.log('ü§ñ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –±–æ—Ç–∞ –∑ Web App...\n');

// –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
const bot = new Telegraf(BOT_TOKEN);

// –¢–µ—Å—Ç—É—î–º–æ Web App –∫–Ω–æ–ø–∫—É
console.log('üì± –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è Web App –∫–Ω–æ–ø–∫–∏...');
const webAppButton = {
  text: 'üìö FAQ',
  web_app: {
    url: 'http://localhost:3000/faq.html'
  }
};

console.log('   Web App –∫–Ω–æ–ø–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–∞:', webAppButton);

// –¢–µ—Å—Ç—É—î–º–æ –≤—ñ–¥–ø—Ä–∞–≤–∫—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
console.log('\nüì§ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è...');

try {
  // –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
  const testContext = {
    from: { id: 123456789, username: 'test_user' },
    reply: async (text, options) => {
      console.log('   ‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ:');
      console.log(`      –¢–µ–∫—Å—Ç: ${text}`);
      console.log(`      –û–ø—Ü—ñ—ó:`, options);
      return { message_id: 1 };
    }
  };

  // –Ü–º—ñ—Ç—É—î–º–æ –æ–±—Ä–æ–±–∫—É FAQ –∫–æ–º–∞–Ω–¥–∏
  console.log('   üß™ –Ü–º—ñ—Ç–∞—Ü—ñ—è –æ–±—Ä–æ–±–∫–∏ FAQ –∫–æ–º–∞–Ω–¥–∏...');
  
  // –¢—É—Ç –º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ä–µ–∞–ª—å–Ω–∏—Ö —Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤
  console.log('   ‚úÖ –¢–µ—Å—Ç–æ–≤–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å—Ç–≤–æ—Ä–µ–Ω–æ');
  
} catch (error) {
  console.log(`   ‚ùå –ü–æ–º–∏–ª–∫–∞: ${error.message}`);
}

console.log('\n‚úÖ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
console.log('\nüí° –î–ª—è –ø–æ–≤–Ω–æ–≥–æ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è:');
console.log('   1. –í—ñ–¥–ø—Ä–∞–≤—Ç–µ –±–æ—Ç—É –∫–æ–º–∞–Ω–¥—É /start');
console.log('   2. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å "üìö FAQ"');
console.log('   3. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ, —á–∏ –≤—ñ–¥–∫—Ä–∏–≤–∞—î—Ç—å—Å—è Web App');
