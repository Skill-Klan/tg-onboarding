#!/usr/bin/env python3
"""
–ü—Ä–∏–∫–ª–∞–¥ –±–æ—Ç–∞ –¥–ª—è –∑–∞–ø—É—Å–∫—É SkillKlan FAQ Mini App
–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î python-telegram-bot v20+
"""

import os
import logging
from telegram import Update, WebAppInfo, KeyboardButton, ReplyKeyboardMarkup, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
from dotenv import load_dotenv

# –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
load_dotenv()

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
BOT_TOKEN = os.getenv('BOT_TOKEN')
WEBAPP_URL = os.getenv('WEBAPP_URL', 'https://your-domain.com/faq.html')
BOT_USERNAME = os.getenv('BOT_USERNAME', 'SkillKlanBot')

class SkillKlanBot:
    def __init__(self):
        self.application = Application.builder().token(BOT_TOKEN).build()
        self.setup_handlers()
    
    def setup_handlers(self):
        """–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –∫–æ–º–∞–Ω–¥"""
        self.application.add_handler(CommandHandler("start", self.start_command))
        self.application.add_handler(CommandHandler("faq", self.faq_command))
        self.application.add_handler(CommandHandler("help", self.help_command))
        self.application.add_handler(CommandHandler("menu", self.menu_command))
        
        # –û–±—Ä–æ–±–∫–∞ –¥–∞–Ω–∏—Ö –∑ Mini App
        self.application.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, self.handle_webapp_data))
        
        # –û–±—Ä–æ–±–∫–∞ –∑–≤–∏—á–∞–π–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
        self.application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, self.handle_message))
    
    async def start_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /start"""
        user = update.effective_user
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –∑ –∫–Ω–æ–ø–∫–æ—é FAQ
        keyboard = [
            [KeyboardButton("üìö FAQ", web_app=WebAppInfo(url=WEBAPP_URL))],
            [KeyboardButton("üí¨ –ó–≤'—è–∑–∞—Ç–∏—Å—è –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é")],
            [KeyboardButton("‚ÑπÔ∏è –ü—Ä–æ —à–∫–æ–ª—É")]
        ]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=False)
        
        welcome_text = f"""
üëã –í—ñ—Ç–∞—é, {user.first_name}!

–Ø –±–æ—Ç SkillKlan - IT —à–∫–æ–ª–∞ –∑ –∫—É—Ä—Å–∞–º–∏:
‚Ä¢ üß™ QA (–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è) - 3 –º—ñ—Å—è—Ü—ñ
‚Ä¢ üìä –ë—ñ–∑–Ω–µ—Å-–∞–Ω–∞–ª—ñ—Ç–∏–∫–∞ - 4 –º—ñ—Å—è—Ü—ñ  
‚Ä¢ ‚öôÔ∏è Backend —Ä–æ–∑—Ä–æ–±–∫–∞ - 6 –º—ñ—Å—è—Ü—ñ–≤

üìö –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É FAQ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π –Ω–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è!
        """
        
        await update.message.reply_text(
            welcome_text.strip(),
            reply_markup=reply_markup
        )
    
    async def faq_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /faq - –∑–∞–ø—É—Å–∫ Mini App"""
        # –°—Ç–≤–æ—Ä—é—î–º–æ inline –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –¥–ª—è –∑–∞–ø—É—Å–∫—É FAQ
        keyboard = [
            [InlineKeyboardButton("üìö –í—ñ–¥–∫—Ä–∏—Ç–∏ FAQ", web_app=WebAppInfo(url=WEBAPP_URL))]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_text(
            "üìö –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –≤—ñ–¥–∫—Ä–∏—Ç–∏ FAQ –∑ —á–∞—Å—Ç–æ –∑–∞–ø–∏—Ç—É–≤–∞–Ω–∏–º–∏ –ø–∏—Ç–∞–Ω–Ω—è–º–∏ –ø—Ä–æ SkillKlan!",
            reply_markup=reply_markup
        )
    
    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /help"""
        help_text = """
üîß –î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:

/start - –ü–æ—á–∞—Ç–∏ —Ä–æ–±–æ—Ç—É –∑ –±–æ—Ç–æ–º
/faq - –í—ñ–¥–∫—Ä–∏—Ç–∏ FAQ
/menu - –ü–æ–∫–∞–∑–∞—Ç–∏ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
/help - –¶—è –¥–æ–≤—ñ–¥–∫–∞

üì± –ö–Ω–æ–ø–∫–∏:
‚Ä¢ üìö FAQ - –í—ñ–¥–∫—Ä–∏—Ç–∏ —á–∞—Å—Ç–æ –∑–∞–ø–∏—Ç—É–≤–∞–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è
‚Ä¢ üí¨ –ó–≤'—è–∑–∞—Ç–∏—Å—è –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é
‚Ä¢ ‚ÑπÔ∏è –ü—Ä–æ —à–∫–æ–ª—É

üåê –í–µ–±-—Å–∞–π—Ç: https://skillklan.com
üìß Email: info@skillklan.com
        """
        
        await update.message.reply_text(help_text.strip())
    
    async def menu_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /menu - –ø–æ–∫–∞–∑–∞—Ç–∏ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é"""
        await self.start_command(update, context)
    
    async def handle_webapp_data(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–æ–±–∫–∞ –¥–∞–Ω–∏—Ö –∑ Mini App"""
        data = update.effective_message.web_app_data.data
        user = update.effective_user
        
        logger.info(f"–û—Ç—Ä–∏–º–∞–Ω–æ –¥–∞–Ω—ñ –∑ WebApp –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user.id}: {data}")
        
        # –û–±—Ä–æ–±–∫–∞ —Ä—ñ–∑–Ω–∏—Ö —Ç–∏–ø—ñ–≤ –¥–∞–Ω–∏—Ö
        if data == "contact_support":
            await update.message.reply_text(
                "üí¨ –î—è–∫—É—é –∑–∞ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è! –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –∑–≤'—è–∂–µ—Ç—å—Å—è –∑ –≤–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º."
            )
        elif data == "course_info":
            await update.message.reply_text(
                "üìö –û—Å—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –Ω–∞—à—ñ –∫—É—Ä—Å–∏:\n\n"
                "üß™ QA (–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è) - 3 –º—ñ—Å—è—Ü—ñ\n"
                "üìä –ë—ñ–∑–Ω–µ—Å-–∞–Ω–∞–ª—ñ—Ç–∏–∫–∞ - 4 –º—ñ—Å—è—Ü—ñ\n"
                "‚öôÔ∏è Backend —Ä–æ–∑—Ä–æ–±–∫–∞ - 6 –º—ñ—Å—è—Ü—ñ–≤"
            )
        else:
            await update.message.reply_text(
                f"üì• –û—Ç—Ä–∏–º–∞–Ω–æ –≤–∞—à –∑–∞–ø–∏—Ç: {data}\n\n"
                "–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –æ–±—Ä–æ–±–∏—Ç—å –π–æ–≥–æ —Ç–∞ –∑–≤'—è–∂–µ—Ç—å—Å—è –∑ –≤–∞–º–∏!"
            )
    
    async def handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–æ–±–∫–∞ –∑–≤–∏—á–∞–π–Ω–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å"""
        text = update.message.text.lower()
        
        if "faq" in text or "–ø–∏—Ç–∞–Ω–Ω—è" in text or "–¥–æ–ø–æ–º–æ–≥–∞" in text:
            await self.faq_command(update, context)
        elif "–ø—ñ–¥—Ç—Ä–∏–º–∫–∞" in text or "–¥–æ–ø–æ–º–æ–≥–∞" in text or "–∑–≤'—è–∑–∞—Ç–∏—Å—è" in text:
            await update.message.reply_text(
                "üí¨ –î–ª—è –∑–≤'—è–∑–∫—É –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é:\n\n"
                "üìß Email: support@skillklan.com\n"
                "üì± Telegram: @SkillKlanSupport\n"
                "üåê –°–∞–π—Ç: https://skillklan.com/support"
            )
        elif "—à–∫–æ–ª–∞" in text or "–∫—É—Ä—Å–∏" in text or "–Ω–∞–≤—á–∞–Ω–Ω—è" in text:
            await update.message.reply_text(
                "üè´ SkillKlan - —Ü–µ IT —à–∫–æ–ª–∞, —è–∫–∞ –≥–æ—Ç—É—î —Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç—ñ–≤ —É —Å—Ñ–µ—Ä—ñ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ–π!\n\n"
                "üéØ –ù–∞—à—ñ –Ω–∞–ø—Ä—è–º–∫–∏:\n"
                "‚Ä¢ üß™ QA (–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è) - 3 –º—ñ—Å—è—Ü—ñ\n"
                "‚Ä¢ üìä –ë—ñ–∑–Ω–µ—Å-–∞–Ω–∞–ª—ñ—Ç–∏–∫–∞ - 4 –º—ñ—Å—è—Ü—ñ\n"
                "‚Ä¢ ‚öôÔ∏è Backend —Ä–æ–∑—Ä–æ–±–∫–∞ - 6 –º—ñ—Å—è—Ü—ñ–≤\n\n"
                "üíª –í—Å—ñ –∫—É—Ä—Å–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ –æ–Ω–ª–∞–π–Ω —Ç–∞ –æ—Ñ–ª–∞–π–Ω –≤ –ö–∏—î–≤—ñ!\n\n"
                "üìö –î–µ—Ç–∞–ª—å–Ω—ñ—à–µ –≤ FAQ: /faq"
            )
        elif "—Ü—ñ–Ω–∏" in text or "–≤–∞—Ä—Ç—ñ—Å—Ç—å" in text or "–æ–ø–ª–∞—Ç–∞" in text:
            await update.message.reply_text(
                "üí≥ –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –æ–ø–ª–∞—Ç—É:\n\n"
                "üí∞ –í–∞—Ä—Ç—ñ—Å—Ç—å –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ –Ω–∞–ø—Ä—è–º–∫—É —Ç–∞ —Ç—Ä–∏–≤–∞–ª–æ—Å—Ç—ñ\n"
                "üí≥ –ü—Ä–∏–π–º–∞—î–º–æ –æ–ø–ª–∞—Ç—É –∫–∞—Ä—Ç–æ—é, –Ω–∞–ª–∏—á–Ω–∏–º–∏ –∞–±–æ –±–∞–Ω–∫—ñ–≤—Å—å–∫–∏–º –ø–µ—Ä–µ–∫–∞–∑–æ–º\n"
                "üìÖ –ú–æ–∂–Ω–∞ –æ–ø–ª–∞—Ç–∏—Ç–∏ –≤–µ—Å—å –∫—É—Ä—Å –æ–¥—Ä–∞–∑—É –∞–±–æ —Ä–æ–∑–±–∏—Ç–∏ –Ω–∞ —á–∞—Å—Ç–∏–Ω–∏\n\n"
                "üìû –î–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ—á–Ω–∏—Ö —Ü—ñ–Ω –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: /start"
            )
        else:
            await update.message.reply_text(
                "ü§î –ù–µ —Ä–æ–∑—É–º—ñ—é –≤–∞—à –∑–∞–ø–∏—Ç. –°–ø—Ä–æ–±—É–π—Ç–µ:\n\n"
                "‚Ä¢ /faq - –¥–ª—è –ø–æ—à—É–∫—É –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π\n"
                "‚Ä¢ /help - –¥–ª—è –¥–æ–≤—ñ–¥–∫–∏\n"
                "‚Ä¢ /menu - –¥–ª—è –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é\n\n"
                "–ê–±–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É üìö FAQ!"
            )
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ SkillKlan...")
        
        # –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞
        self.application.run_polling(
            allowed_updates=Update.ALL_TYPES,
            drop_pending_updates=True
        )

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è"""
    if not BOT_TOKEN:
        logger.error("BOT_TOKEN –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞!")
        return
    
    try:
        bot = SkillKlanBot()
        bot.run()
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞: {e}")

if __name__ == "__main__":
    main()
