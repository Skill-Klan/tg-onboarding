/**
 * –ö–æ–Ω—Ç—Ä–æ–ª–µ—Ä –ø–æ—à—É–∫—É –¥–ª—è FAQ
 * –ö–µ—Ä—É—î –ø–æ—à—É–∫–æ–º, debounce —Ç–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è–º —Å—Ç–∞–Ω—É
 */
class SearchController {
    constructor(searchEngine, appInstance) {
        this.searchEngine = searchEngine;
        this.appInstance = appInstance;
        this.searchInput = null;
        this.searchTimeout = null;
        this.debounceDelay = 200; // Debounce 200–º—Å
        this.isSearchActive = false;
        this.expandedState = null; // –ó–±–µ—Ä–µ–∂–µ–Ω–∏–π —Å—Ç–∞–Ω —Ä–æ–∑–∫—Ä–∏—Ç—Ç—è
        this.originalData = null;
        this.isInitialized = false;
    }

    /**
     * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä–∞
     * @param {Object} faqData - –î–∞–Ω—ñ FAQ
     */
    init(faqData) {
        try {
            this.originalData = faqData;
            this.searchEngine.buildIndex(faqData);
            this.findElements();
            this.addEventListeners();
            this.isInitialized = true;
            console.log('–ö–æ–Ω—Ç—Ä–æ–ª–µ—Ä –ø–æ—à—É–∫—É —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
        } catch (error) {
            console.error('–ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä–∞ –ø–æ—à—É–∫—É:', error);
        }
    }

    /**
     * –ó–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö DOM –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
     */
    findElements() {
        this.searchInput = document.getElementById('search-input');
        if (!this.searchInput) {
            throw new Error('–ü–æ–ª–µ –ø–æ—à—É–∫—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
        }
    }

    /**
     * –î–æ–¥–∞–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π
     */
    addEventListeners() {
        // –û–±—Ä–æ–±–Ω–∏–∫ –≤–≤–µ–¥–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç—É –∑ debounce
        this.searchInput.addEventListener('input', (e) => {
            this.handleSearchInput(e.target.value);
        });

        // –û–±—Ä–æ–±–Ω–∏–∫ –æ—á–∏—â–µ–Ω–Ω—è –ø–æ–ª—è
        this.searchInput.addEventListener('keydown', (e) => {
            if (e.key === 'Escape') {
                this.clearSearch();
            }
        });

        // –û–±—Ä–æ–±–Ω–∏–∫ —Ñ–æ–∫—É—Å—É –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –ø—Ä–∏ –ø–æ—Ä–æ–∂–Ω—å–æ–º—É –ø–æ–ª—ñ
        this.searchInput.addEventListener('focus', () => {
            if (this.searchInput.value.trim() === '') {
                this.clearSearch();
            }
        });

        // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –æ—á–∏—â–µ–Ω–Ω—è
        const clearSearchButton = document.getElementById('clear-search-button');
        if (clearSearchButton) {
            clearSearchButton.addEventListener('click', () => {
                this.clearSearch();
            });
        }
    }

    /**
     * –û–±—Ä–æ–±–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç—É –≤ –ø–æ–ª–µ –ø–æ—à—É–∫—É
     * @param {string} query - –ü–æ—à—É–∫–æ–≤–∏–π –∑–∞–ø–∏—Ç
     */
    handleSearchInput(query) {
        // –û—á–∏—â–∞—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π —Ç–∞–π–º–µ—Ä
        if (this.searchTimeout) {
            clearTimeout(this.searchTimeout);
        }

        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –Ω–æ–≤–∏–π —Ç–∞–π–º–µ—Ä –¥–ª—è –ø–æ—à—É–∫—É
        this.searchTimeout = setTimeout(() => {
            this.performSearch(query);
        }, this.debounceDelay);
    }

    /**
     * –í–∏–∫–æ–Ω–∞–Ω–Ω—è –ø–æ—à—É–∫—É
     * @param {string} query - –ü–æ—à—É–∫–æ–≤–∏–π –∑–∞–ø–∏—Ç
     */
    performSearch(query) {
        const trimmedQuery = query.trim();
        
        if (trimmedQuery === '') {
            this.clearSearch();
            return;
        }

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Å—Ç–∞–Ω —Ä–æ–∑–∫—Ä–∏—Ç—Ç—è –ø–µ—Ä–µ–¥ –ø–µ—Ä—à–∏–º –ø–æ—à—É–∫–æ–º
        if (!this.isSearchActive) {
            this.saveExpandedState();
            this.isSearchActive = true;
        }

        // –í–∏–∫–æ–Ω—É—î–º–æ –ø–æ—à—É–∫
        const filteredData = this.searchEngine.getFilteredData(trimmedQuery);
        
        if (filteredData) {
            // –ü–æ–∫–∞–∑—É—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É
            this.renderSearchResults(filteredData);
            
            // –ü–æ–∫–∞–∑—É—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—à—É–∫—É
            const stats = this.searchEngine.getSearchStats(trimmedQuery);
            console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É:', {
                query: trimmedQuery,
                matchedQuestions: stats.matchedQuestions,
                matchedCategories: stats.matchedCategories,
                totalQuestions: stats.totalQuestions
            });
        } else {
            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è "–ù—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
            this.showNoResultsMessage(trimmedQuery);
            console.log('–ü–æ—à—É–∫ –Ω–µ –¥–∞–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤:', trimmedQuery);
        }
    }

    /**
     * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –ø–æ—à—É–∫—É
     * @param {Object} filteredData - –§—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ
     */
    renderSearchResults(filteredData) {
        // –û—á–∏—â–∞—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä FAQ
        const faqContainer = document.getElementById('faq-container');
        if (!faqContainer) return;

        faqContainer.innerHTML = '';

        // –†–µ–Ω–¥–µ—Ä–∏–º–æ —Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
        filteredData.categories.forEach(categoryData => {
            const categoryComponent = new CategoryComponent(categoryData, this.appInstance.questionComponent);
            const categoryElement = categoryComponent.createElement();
            
            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –ø—ñ–¥ —á–∞—Å –ø–æ—à—É–∫—É
            categoryComponent.openCategory();
            
            faqContainer.appendChild(categoryElement);
        });

        // –î–æ–¥–∞—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—à—É–∫—É
        this.addSearchStatistics(filteredData);

        // –û—á–∏—â–∞—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É –≤ SearchComponent
        const searchResults = document.getElementById('search-results');
        if (searchResults) {
            searchResults.innerHTML = '';
        }
    }

    /**
     * –ü–æ–∫–∞–∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è "–ù—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
     * @param {string} query - –ü–æ—à—É–∫–æ–≤–∏–π –∑–∞–ø–∏—Ç
     */
    showNoResultsMessage(query) {
        const faqContainer = document.getElementById('faq-container');
        if (!faqContainer) return;

        faqContainer.innerHTML = `
            <div class="no-results-message" style="
                text-align: center;
                padding: 60px 20px;
                color: #6c757d;
                font-size: 1.1rem;
            ">
                <div style="font-size: 3rem; margin-bottom: 20px;">üîç</div>
                <h3 style="color: #495057; margin-bottom: 15px;">–ù—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</h3>
                <p>–ó–∞ –∑–∞–ø–∏—Ç–æ–º "<strong>${this.escapeHtml(query)}</strong>" –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∂–æ–¥–Ω–æ–≥–æ –ø–∏—Ç–∞–Ω–Ω—è.</p>
                <p style="margin-top: 10px; font-size: 0.9rem;">
                    –°–ø—Ä–æ–±—É–π—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏ –ø–æ—à—É–∫–æ–≤–∏–π –∑–∞–ø–∏—Ç –∞–±–æ –ø–µ—Ä–µ–≥–ª—è–Ω—å—Ç–µ –≤—Å—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó.
                </p>
            </div>
        `;
    }

    /**
     * –î–æ–¥–∞–≤–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ—à—É–∫—É
     * @param {Object} filteredData - –§—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ
     */
    addSearchStatistics(filteredData) {
        const statsContainer = document.createElement('div');
        statsContainer.className = 'search-stats';
        statsContainer.style.cssText = `
            padding: 20px 30px;
            background: #e3f2fd;
            border-top: 1px solid #bbdefb;
            text-align: center;
            color: #1976d2;
            font-size: 0.9rem;
        `;

        const categoriesCount = filteredData.categories.length;
        const totalQuestions = filteredData.categories.reduce((total, cat) => total + cat.questions.length, 0);

        statsContainer.innerHTML = `
            <span>üîç –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É:</span>
            <span style="margin: 0 15px;">|</span>
            <span>üìö ${categoriesCount} –∫–∞—Ç–µ–≥–æ—Ä—ñ–π</span>
            <span style="margin: 0 15px;">|</span>
            <span>‚ùì ${totalQuestions} –ø–∏—Ç–∞–Ω—å</span>
        `;

        const faqContainer = document.getElementById('faq-container');
        if (faqContainer) {
            faqContainer.appendChild(statsContainer);
        }
    }

    /**
     * –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω—É —Ä–æ–∑–∫—Ä–∏—Ç—Ç—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π —Ç–∞ –ø–∏—Ç–∞–Ω—å
     */
    saveExpandedState() {
        if (this.expandedState) return; // –í–∂–µ –∑–±–µ—Ä–µ–∂–µ–Ω–æ

        try {
            this.expandedState = {
                openCategories: new Set(this.appInstance.currentState.openCategories),
                openQuestions: new Set(this.appInstance.currentState.openQuestions),
                timestamp: Date.now()
            };
            console.log('–°—Ç–∞–Ω —Ä–æ–∑–∫—Ä–∏—Ç—Ç—è –∑–±–µ—Ä–µ–∂–µ–Ω–æ:', {
                categories: this.expandedState.openCategories.size,
                questions: this.expandedState.openQuestions.size
            });
        } catch (error) {
            console.warn('–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω—É —Ä–æ–∑–∫—Ä–∏—Ç—Ç—è:', error);
            this.expandedState = null;
        }
    }

    /**
     * –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–æ–≥–æ —Å—Ç–∞–Ω—É —Ä–æ–∑–∫—Ä–∏—Ç—Ç—è
     */
    restoreExpandedState() {
        if (!this.expandedState) return;

        try {
            // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
            this.expandedState.openCategories.forEach(categoryId => {
                const categoryComponent = this.appInstance.categoryComponents.find(comp => 
                    comp.getCategoryData().id === categoryId
                );
                if (categoryComponent && !categoryComponent.isCategoryOpen()) {
                    categoryComponent.toggleCategory();
                }
            });

            // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –ø–∏—Ç–∞–Ω—å
            this.expandedState.openQuestions.forEach(questionId => {
                this.appInstance.questionComponent.openQuestionById(questionId);
            });

            console.log('–°—Ç–∞–Ω —Ä–æ–∑–∫—Ä–∏—Ç—Ç—è –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ:', {
                categories: this.expandedState.openCategories.size,
                questions: this.expandedState.openQuestions.size
            });
        } catch (error) {
            console.warn('–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É —Ä–æ–∑–∫—Ä–∏—Ç—Ç—è:', error);
        }
    }

    /**
     * –û—á–∏—â–µ–Ω–Ω—è –ø–æ—à—É–∫—É —Ç–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∞–Ω—É
     */
    clearSearch() {
        // –û—á–∏—â–∞—î–º–æ –ø–æ–ª–µ –ø–æ—à—É–∫—É
        if (this.searchInput) {
            this.searchInput.value = '';
        }

        // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ
        if (this.originalData) {
            this.renderOriginalFAQ();
        }

        // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π —Å—Ç–∞–Ω —Ä–æ–∑–∫—Ä–∏—Ç—Ç—è
        if (this.expandedState) {
            this.restoreExpandedState();
            this.expandedState = null;
        }

        // –û—á–∏—â–∞—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É –≤ SearchComponent
        const searchResults = document.getElementById('search-results');
        if (searchResults) {
            searchResults.innerHTML = '';
        }

        // –•–æ–≤–∞—î–º–æ –∫–Ω–æ–ø–∫—É –æ—á–∏—â–µ–Ω–Ω—è
        const clearSearchButton = document.getElementById('clear-search-button');
        if (clearSearchButton) {
            clearSearchButton.style.display = 'none';
        }

        this.isSearchActive = false;
        console.log('–ü–æ—à—É–∫ –æ—á–∏—â–µ–Ω–æ, –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ');
    }

    /**
     * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–æ–≥–æ FAQ
     */
    renderOriginalFAQ() {
        if (!this.appInstance || !this.originalData) return;

        // –í–∏–∫–ª–∏–∫–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π –º–µ—Ç–æ–¥ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥—É
        this.appInstance.renderFAQ();

        // –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π —Å—Ç–∞–Ω —Ä–æ–∑–∫—Ä–∏—Ç—Ç—è
        if (this.expandedState) {
            this.restoreExpandedState();
        }
    }

    /**
     * –ï–∫—Ä–∞–Ω—É–≤–∞–Ω–Ω—è HTML –¥–ª—è –±–µ–∑–ø–µ—á–Ω–æ–≥–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
     * @param {string} text - –¢–µ–∫—Å—Ç –¥–ª—è –µ–∫—Ä–∞–Ω—É–≤–∞–Ω–Ω—è
     * @returns {string} –ï–∫—Ä–∞–Ω–æ–≤–∞–Ω–∏–π —Ç–µ–∫—Å—Ç
     */
    escapeHtml(text) {
        const div = document.createElement('div');
        div.textContent = text;
        return div.innerHTML;
    }

    /**
     * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö FAQ
     * @param {Object} newData - –ù–æ–≤—ñ –¥–∞–Ω—ñ
     */
    updateFAQData(newData) {
        this.originalData = newData;
        this.searchEngine.buildIndex(newData);
    }

    /**
     * –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ—à—É–∫—É
     * @returns {Object} –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
     */
    getSearchStats() {
        return {
            isSearchActive: this.isSearchActive,
            isInitialized: this.isInitialized,
            debounceDelay: this.debounceDelay,
            hasExpandedState: !!this.expandedState
        };
    }

    /**
     * –ó–Ω–∏—â–µ–Ω–Ω—è –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä–∞
     */
    destroy() {
        if (this.searchTimeout) {
            clearTimeout(this.searchTimeout);
        }
        
        this.searchInput = null;
        this.searchTimeout = null;
        this.expandedState = null;
        this.originalData = null;
        this.isSearchActive = false;
        this.isInitialized = false;
    }
}
