#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è FAQ –¥–æ–¥–∞—Ç–∫—É
 * –ó–∞–ø—É—Å–∫–∞—î —Ç–µ—Å—Ç–∏ —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä—è—î –æ—Å–Ω–æ–≤–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
 */

const fs = require('fs');
const path = require('path');

console.log('üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è FAQ –¥–æ–¥–∞—Ç–∫—É...\n');

// –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –æ—Å–Ω–æ–≤–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤
const requiredFiles = [
    'js/app.js',
    'js/searchEngine.js',
    'js/searchController.js',
    'js/searchComponent.js',
    'js/dataLoader.js',
    'js/categoryComponent.js',
    'js/questionComponent.js',
    'css/style.css',
    'data.json',
    'index.html',
    'test-search.html'
];

console.log('üìÅ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ —Ñ–∞–π–ª—ñ–≤:');
let allFilesExist = true;

requiredFiles.forEach(file => {
    const filePath = path.join(__dirname, file);
    const exists = fs.existsSync(filePath);
    const status = exists ? '‚úÖ' : '‚ùå';
    console.log(`  ${status} ${file}`);
    if (!exists) allFilesExist = false;
});

console.log('');

if (!allFilesExist) {
    console.log('‚ùå –î–µ—è–∫—ñ —Ñ–∞–π–ª–∏ –≤—ñ–¥—Å—É—Ç–Ω—ñ. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç—É.');
    process.exit(1);
}

// –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤–º—ñ—Å—Ç data.json
try {
    const dataPath = path.join(__dirname, 'data.json');
    const data = JSON.parse(fs.readFileSync(dataPath, 'utf8'));
    
    console.log('üìä –ê–Ω–∞–ª—ñ–∑ –¥–∞–Ω–∏—Ö FAQ:');
    console.log(`  üìö –ö–∞—Ç–µ–≥–æ—Ä—ñ–π: ${data.categories ? data.categories.length : 0}`);
    
    if (data.categories) {
        let totalQuestions = 0;
        data.categories.forEach(category => {
            if (category.questions) {
                totalQuestions += category.questions.length;
            }
        });
        console.log(`  ‚ùì –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–∏—Ç–∞–Ω—å: ${totalQuestions}`);
    }
    
    console.log(`  üîç –ü–æ—à—É–∫–æ–≤–∏—Ö —Ç–µ–≥—ñ–≤: ${data.searchTags ? data.searchTags.length : 0}`);
    
} catch (error) {
    console.log(`‚ùå –ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è data.json: ${error.message}`);
}

console.log('\nüöÄ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –≥–æ—Ç–æ–≤–µ!');
console.log('\nüìã –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è:');
console.log('1. –í—ñ–¥–∫—Ä–∏–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä —Ç–∞ –ø–µ—Ä–µ–π–¥—ñ—Ç—å –Ω–∞ http://localhost:8000');
console.log('2. –î–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–æ—à—É–∫—É –≤—ñ–¥–∫—Ä–∏–π—Ç–µ http://localhost:8000/test-search.html');
console.log('3. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ test-search.html');
console.log('4. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –ø–æ–º–∏–ª–æ–∫');
console.log('\nüõë –î–ª—è –∑—É–ø–∏–Ω–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å Ctrl+C');

console.log('\n‚úÖ –õ–æ–∫–∞–ª—å–Ω–µ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–ø—É—â–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!');
